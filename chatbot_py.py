# -*- coding: utf-8 -*-
"""chatbot.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1feCkdIYr8e1V5KIzxxooJr5o2bRK4R4p
"""

import random

intents = {
    "intents": [
        {
            "tag": "greeting",
            "patterns": ["hi", "hello", "hey", "good morning", "good evening"],
            "responses": ["Hello! How can I help you with your health concerns today?", "Hi! I'm MedBot. How may I assist you?"]
        },
        {
            "tag": "goodbye",
            "patterns": ["bye", "goodbye", "see you", "take care"],
            "responses": ["Goodbye! Take care of your health!", "Stay healthy! Goodbye!"]
        },
        {
            "tag": "thanks",
            "patterns": ["thanks", "thank you", "appreciate it"],
            "responses": ["You're welcome!", "Happy to help!", "My pleasure!"]
        },
        {
            "tag": "headache",
            "patterns": ["i have a headache", "my head hurts", "migraine", "head pain"],
            "responses": ["For headaches, try: \n1. Rest in a quiet, dark room\n2. Stay hydrated\n3. Take over-the-counter pain relievers\n4. Apply a cold or warm compress\nIf persistent, please consult a doctor."]
        },
        {
            "tag": "fever",
            "patterns": ["i have fever", "body temperature", "feeling hot", "high temperature"],
            "responses": ["For fever management:\n1. Rest well\n2. Stay hydrated\n3. Take paracetamol if needed\n4. Use a light blanket\nSeek medical attention if fever persists over 3 days or exceeds 103°F (39.4°C)."]
        },
        {
            "tag": "cold",
            "patterns": ["i have a cold", "runny nose", "sneezing", "cough"],
            "responses": ["For cold relief:\n1. Get plenty of rest\n2. Drink warm fluids\n3. Use saline nasal drops\n4. Try honey for cough\nMost colds clear up in 7-10 days. See a doctor if symptoms worsen."]
        },
        {
            "tag": "emergency",
            "patterns": ["chest pain", "difficulty breathing", "severe bleeding", "unconscious"],
            "responses": ["This sounds serious! Please call emergency services (911) immediately or go to the nearest emergency room."]
        },
        {
            "tag": "default",
            "patterns": [""],
            "responses": ["I'm not sure I understand. Could you rephrase that?", "Could you please provide more details about your symptoms?", "I'm still learning. Could you try explaining differently?"]
        }
    ]
}

def predict_class(message):
    message = message.lower()
    for intent in intents["intents"]:
        if any(pattern in message for pattern in intent["patterns"]):
            return [{"intent": intent["tag"], "probability": "1.0"}]
    return [{"intent": "default", "probability": "1.0"}]

def get_response(ints_list, intents_json):
    if not ints_list:
        return "I'm not sure how to respond to that."
    
    tag = ints_list[0]["intent"]
    list_of_intents = intents_json["intents"]
    
    for intent in list_of_intents:
        if intent["tag"] == tag:
            return random.choice(intent["responses"])
    
    return "I'm not sure how to respond to that."

print("GO! BOT IS RUNNING")

# while True:
#   message=input("")
#   ints=predict_class(message)
#   res=get_response(ints,intents)
#   print(res)